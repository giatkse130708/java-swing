/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package giatk.ui;

import java.util.Calendar;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author Kha Gia
 */
public class Main extends javax.swing.JFrame {

    /**
     *  Information should be verified:
        Student code: max length is 10, not contains special characters (@, #, $)
        Student name: max length is 30
        Birth Date: in format MM/DD/YYYY
        Phone number: max length is 15, contain numeric characters only (0 – 9)
        Email: max length is 30, contain only one “@” character, do not contain special characters (!, #, $)

     */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        txtStudentCode.requestFocus();
    }
    
    private boolean isValidBirthDate(int DD, int MM, int YY){
        int maxDate = 31;
        if(YY > java.time.LocalDate.now().getYear() || YY < 1900){
            JOptionPane.showMessageDialog(this, "Birth Date: 1900 from 2019");
            return false;
        }
        switch (MM) {
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                maxDate = 31;
                break;
            case 4:
            case 6:
            case 9:
            case 11:
                maxDate = 30;
                break;
            case 2:
                if(YY % 4 == 0 && YY % 100 != 0){
                    maxDate = 29;
                }else
                    maxDate = 28;
                break;
            default:
                break;
        }
        if(DD < 1 || DD > maxDate || MM < 1 || MM > 12){
            if(DD < 1 || DD > maxDate){
                JOptionPane.showMessageDialog(this, "Date 1 -> " + maxDate);
            }
            if(MM < 1 || MM > 12)
                JOptionPane.showMessageDialog(this, "Month 1 -> 12");
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtStudentCode = new javax.swing.JTextField();
        txtStudentName = new javax.swing.JTextField();
        txtBirthDate = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Student code");

        jLabel2.setText("Student Name");

        jLabel3.setText("Birth date");

        jLabel4.setText("Phone number");

        jLabel5.setText("Email");

        txtStudentCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentCodeActionPerformed(evt);
            }
        });

        txtStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentNameActionPerformed(evt);
            }
        });

        txtBirthDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthDateActionPerformed(evt);
            }
        });

        txtPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumberActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(82, 82, 82)
                        .addComponent(txtEmail))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)
                        .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(txtStudentCode, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(58, 58, 58)
                        .addComponent(txtBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStudentCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtStudentCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentCodeActionPerformed
        //Student code: max length is 10, not contains special characters (@, #, $)
        if(!txtStudentCode.getText().matches("[^@^#^$]{0,10}")){
            JOptionPane.showMessageDialog(this, "Max length is 10, not contains special characters (@, #, $)");
            txtStudentCode.requestFocus();
        }else{
            txtStudentName.requestFocus();
        }
    }//GEN-LAST:event_txtStudentCodeActionPerformed

    private void txtStudentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentNameActionPerformed
        //Student name: max length is 30
        if(!txtStudentName.getText().matches(".{0,30}")){
            JOptionPane.showMessageDialog(this, "max length is 30");
            txtStudentName.requestFocus();
        }else{
            txtBirthDate.requestFocus();
        }
    }//GEN-LAST:event_txtStudentNameActionPerformed

    private void txtBirthDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthDateActionPerformed
        //Birth Date: in format MM/DD/YYYY
        int DD = 0, MM = 0, YY = 0;
        if(!txtBirthDate.getText().matches("[0-9]{2}[/][0-9]{2}[/][0-9]{4}")){
            JOptionPane.showMessageDialog(this, "in format MM/DD/YYYY");
            txtBirthDate.requestFocus();
            return;
        }
        
        try {
            StringTokenizer st = new StringTokenizer(txtBirthDate.getText(), "/");
            MM = Integer.parseInt(st.nextToken());
            DD = Integer.parseInt(st.nextToken());
            YY = Integer.parseInt(st.nextToken());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "in format MM/DD/YYYY");
            return;
        }
        if(!isValidBirthDate(DD, MM, YY)){
            txtBirthDate.requestFocus();
            //do something
        }else{
            txtPhoneNumber.requestFocus();
        }
        
    }//GEN-LAST:event_txtBirthDateActionPerformed

    private void txtPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumberActionPerformed
        //max length is 15, contain numeric characters only (0 – 9)
        if(!txtPhoneNumber.getText().matches("[\\d]{0,15}")){
            JOptionPane.showMessageDialog(this, "max length is 15, contain numeric characters only (0 – 9)");
            txtPhoneNumber.requestFocus();
        }else{
            txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtPhoneNumberActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        //Email: max length is 30, contain only one “@” character, do not contain special characters (!, #, $)
        if(!txtEmail.getText().matches("[^!^#^$]*[@]{1}[^!^#^$]*") || !(txtEmail.getText().length() <= 30)){
            JOptionPane.showMessageDialog(this, "max length is 30, contain only one “@” character, do not contain special characters (!, #, $)");
            txtEmail.requestFocus();
        }else{
            JOptionPane.showMessageDialog(this, "Done!");
        }
    }//GEN-LAST:event_txtEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtBirthDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtStudentCode;
    private javax.swing.JTextField txtStudentName;
    // End of variables declaration//GEN-END:variables
}
